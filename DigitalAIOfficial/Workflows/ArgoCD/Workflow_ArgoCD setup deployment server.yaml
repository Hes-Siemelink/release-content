# Exported from:        http://localhost:5516/
# Release version:      24.3.0-1009.113
# Date created:         Wed Oct 09 13:29:33 GMT 2024

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  path: Workflows/ArgoCD
  home: Digital.ai - Official/Workflows/ArgoCD
spec:
- template: ArgoCD setup deployment server
  description: Create required connections for ArgoCD deployment server
  scheduledStartDate: 2024-08-28T07:00:00Z
  dueDate: 2024-08-28T08:00:00Z
  phases:
  - phase: User input
    tasks:
    - name: Choose connection
      type: xlrelease.UserInputTask
      description: Choose ArgoCD server which you want to be configured.
      variables:
      - server
    color: "#3d6c9e"
  - phase: Configure connection
    tasks:
    - name: Setup deployment server
      type: xlrelease.ScriptTask
      description: Creates required configuration items in Release for connection
        to deployment server.
      script: |-
        from com.xebialabs.xlrelease.api.v1.forms import DeploymentServerSetup
        from java.lang import Throwable

        folderId = getCurrentFolder().getId()
        serverId = releaseVariables['server']

        deploymentServerSetup = DeploymentServerSetup(folderId, serverId)

        try:
          statusWebhookEventSourceId = deploymentServerApi.setupDeploymentServer(deploymentServerSetup)
          releaseVariables['statusWebhookEventSourceId'] = statusWebhookEventSourceId
        except Throwable as e:
          if "Cannot find active remote runner" in str(e):
            raise Exception("Failed to find active remote runner for executing container script.")
          raise
    - name: Autoconfigure deployment server
      type: xlrelease.ScriptTask
      description: Generates ArgoCD config map required to enable live event notifications.
      script: |-
        from java.lang import Throwable

        try:
          autoConfigResponse = deploymentServerApi.autoconfigureDeploymentServer("${statusWebhookEventSourceId}")
          releaseVariables['autoconfigMessage'] = autoConfigResponse.message
          releaseVariables['autoconfigUrl'] = autoConfigResponse.url
          releaseVariables['autoconfigDetails'] = autoConfigResponse.details
        except Throwable as e:
          if "Cannot find active remote runner" in str(e):
            raise Exception("Failed to find active remote runner for executing container script.")
          raise
    color: "#3d6c9e"
  - phase: Final
    tasks:
    - name: Autoconfig response
      type: xlrelease.Task
      description: |-
        ${autoconfigMessage}

        [More about ArgoCD notifications](${autoconfigUrl})

        ```
        ${autoconfigDetails}
        ```
    color: "#3d6c9e"
  kind: WORKFLOW
  tags:
  - Remote ArgoCD
  - deployment server
  - new
  categories:
  - Create Deployment Server
  variables:
  - type: xlrelease.StringVariable
    key: statusWebhookEventSourceId
    requiresValue: false
    showOnReleaseStart: false
  - type: xlrelease.ReferenceVariable
    key: server
    requiresValue: false
    showOnReleaseStart: false
    label: ArgoCD server
    referencedType: argocd.APIServer
  - type: xlrelease.StringVariable
    key: autoconfigMessage
    requiresValue: false
    showOnReleaseStart: false
    label: Response message
  - type: xlrelease.StringVariable
    key: autoconfigUrl
    requiresValue: false
    showOnReleaseStart: false
    label: Response URL
  - type: xlrelease.StringVariable
    key: autoconfigDetails
    requiresValue: false
    showOnReleaseStart: false
    label: Response details
  disableNotifications: true
  author: Digital.ai
  logo:
    type: xlrelease.TemplateLogo
    contentType: image/svg+xml
    file: !file "template-logo/f135c640e5d041621e3ad1546ba6e1f8b3ddd434/argocd.svg"
  defaultTargetFolder: Digital.ai - Official/Workflow Executions
