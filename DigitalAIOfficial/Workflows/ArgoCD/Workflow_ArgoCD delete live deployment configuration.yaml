# Exported from:        http://localhost:5516/
# Release version:      24.3.0-1009.113
# Date created:         Fri Oct 11 11:16:46 GMT 2024

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  path: Workflows/ArgoCD
  home: Digital.ai - Official/Workflows/ArgoCD
spec:
- template: ArgoCD delete live deployment configuration
  description: Delete ArgoCD live deployment configuration
  scheduledStartDate: 2024-09-10T10:33:53.874Z
  dueDate: 2024-09-10T11:33:53.874Z
  phases:
  - phase: Delete live deployment config
    tasks:
    - name: Delete live deployment configuration
      type: xlrelease.ScriptTask
      description: Deletes deployment configuration from event source and from system.
      script: |-
        from com.xebialabs.xlrelease.domain import Configuration
        from com.xebialabs.deployit.plugin.api.reflect import Type

        statusWebhookEventSource = configurationApi.getConfiguration("${statusWebhookEventSourceId}")
        liveDeploymentConfigs = statusWebhookEventSource.getProperty("liveDeploymentConfigs")

        configToDelete = None
        for config in statusWebhookEventSource.getProperty("liveDeploymentConfigs"):
          if config.id == "${liveDeploymentConfigurationId}":
            configToDelete = config
            break

        if configToDelete:
          liveDeploymentConfigs.remove(configToDelete)
          statusWebhookEventSource.setProperty("liveDeploymentConfigs", liveDeploymentConfigs)
          configurationApi.updateConfiguration("${statusWebhookEventSourceId}", statusWebhookEventSource)
          configurationApi.deleteConfiguration(configToDelete.id)
    - name: Patch ArgoCD applications
      type: xlrelease.ScriptTask
      description: |-
        Patches ArgoCD applications by running a container script, adding the necessary annotation to enable live event notifications.

        The following annotation is applied to all apps matching the specified filter:
        `notifications.argoproj.io/subscribe.on-app-status-changed.release-webhook`
      script: |-
        from java.lang import Throwable

        try:
          deploymentServerApi.patchDeploymentServer("${statusWebhookEventSourceId}")
        except Throwable as e:
          if "Cannot find active remote runner" in str(e):
            raise Exception("Failed to find active remote runner for executing container script.")
          raise
    color: "#3d6c9e"
  kind: WORKFLOW
  tags:
  - Remote ArgoCD
  - deployment server
  - delete
  categories:
  - Application onboarding
  variables:
  - type: xlrelease.StringVariable
    key: statusWebhookEventSourceId
  - type: xlrelease.StringVariable
    key: liveDeploymentConfigurationId
    requiresValue: false
  disableNotifications: true
  author: Digital.ai
  logo:
    type: xlrelease.TemplateLogo
    contentType: image/png
    file: !file "template-logo/ee56b238a6fc43a22ee28a87ea8fcb661ff91068/argocd.svg"
  defaultTargetFolder: Digital.ai - Official/Workflow Executions
