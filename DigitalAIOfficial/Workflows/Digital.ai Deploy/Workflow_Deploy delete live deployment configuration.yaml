# Exported from:        http://localhost:5516/
# Release version:      24.3.0-1009.113
# Date created:         Fri Oct 11 11:16:45 GMT 2024

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  path: Workflows/Digital.ai Deploy
  home: Digital.ai - Official/Workflows/Digital.ai Deploy
spec:
- template: Deploy delete live deployment configuration
  description: Delete Deploy live deployment configuration
  scheduledStartDate: 2024-09-10T10:33:53.874Z
  dueDate: 2024-09-10T11:33:53.874Z
  phases:
  - phase: Delete live deployment config
    tasks:
    - name: Configure Digital.ai Release
      type: xlrelease.ScriptTask
      description: Deleting Live Deployment configuration
      script: |-
        from com.xebialabs.xlrelease.domain import Configuration
        from com.xebialabs.deployit.plugin.api.reflect import Type

        statusWebhookEventSource = configurationApi.getConfiguration("${statusWebhookEventSourceId}")
        liveDeploymentConfigs = statusWebhookEventSource.getProperty("liveDeploymentConfigs")

        configToDelete = None
        for config in statusWebhookEventSource.getProperty("liveDeploymentConfigs"):
          if config.id == "${liveDeploymentConfigurationId}":
           configToDelete = config
           break

        if configToDelete:
          liveDeploymentConfigs.remove(configToDelete)
          statusWebhookEventSource.setProperty("liveDeploymentConfigs", liveDeploymentConfigs)
          configurationApi.updateConfiguration("${statusWebhookEventSourceId}", statusWebhookEventSource)
          configurationApi.deleteConfiguration(configToDelete.id)
    - name: Configure Digital.ai Deploy
      type: xlrelease.ScriptTask
      description: Deleting webhook configuration from Digital.ai Deploy
      script: |-
        from java.lang import Throwable

        try:
          autoconfigResponse = deploymentServerApi.autoconfigureDeploymentServer("${statusWebhookEventSourceId}")
          releaseVariables['autoconfigMessage'] = autoconfigResponse.message
          releaseVariables['autoconfigUrl'] = autoconfigResponse.url
        except Throwable as e:
          if "Cannot find active remote runner" in str(e):
            raise Exception("Failed to find active remote runner for executing container script.")
          raise
    - name: Configuration successful
      type: xlrelease.Task
      description: |-
        ${autoconfigMessage}

        [View configuration in Deploy](${autoconfigUrl})
    color: "#3d6c9e"
  kind: WORKFLOW
  tags:
  - Remote Deploy
  - deployment server
  - delete
  categories:
  - Application onboarding
  variables:
  - type: xlrelease.StringVariable
    key: statusWebhookEventSourceId
  - type: xlrelease.StringVariable
    key: liveDeploymentConfigurationId
    requiresValue: false
  - type: xlrelease.StringVariable
    key: autoconfigMessage
    requiresValue: false
    showOnReleaseStart: false
    label: Response message
  - type: xlrelease.StringVariable
    key: autoconfigUrl
    requiresValue: false
    showOnReleaseStart: false
    label: Response URL
  disableNotifications: true
  author: Digital.ai
  logo:
    type: xlrelease.TemplateLogo
    contentType: image/png
    file: !file "template-logo/32ac25401af79dc609dd3adc3b2bc18ffafedbaa/deploy.svg"
  defaultTargetFolder: Digital.ai - Official/Workflow Executions
