# Exported from:        http://localhost:5516/
# Release version:      24.3.0-1009.113
# Date created:         Wed Oct 09 13:29:33 GMT 2024

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  path: Workflows/Digital.ai Deploy
  home: Digital.ai - Official/Workflows/Digital.ai Deploy
spec:
- template: Deploy setup deployment server
  description: Create required connections for Deploy deployment server
  scheduledStartDate: 2024-08-28T07:00:00Z
  dueDate: 2024-08-28T08:00:00Z
  phases:
  - phase: User Input
    tasks:
    - name: Choose outbound connection
      type: xlrelease.UserInputTask
      description: |-
        A couple of things need to be configured when setting up Live deployments with Digital.ai Deploy.

        First, choose the Deploy server that you want to listen to.
      variables:
      - server
    color: "#3d6c9e"
  - phase: Configure connection
    tasks:
    - name: Configure Digital.ai Release
      type: xlrelease.ScriptTask
      description: Creating required configuration in Release to listen to deployments
        coming from Digital.ai Deploy
      script: |-
        from com.xebialabs.xlrelease.api.v1.forms import DeploymentServerSetup
        from java.lang import Throwable

        folderId = getCurrentFolder().getId()
        serverId = releaseVariables['server']

        deploymentServerSetup = DeploymentServerSetup(folderId, serverId)

        try:
          statusWebhookEventSourceId = deploymentServerApi.setupDeploymentServer(deploymentServerSetup)
          releaseVariables['statusWebhookEventSourceId'] = statusWebhookEventSourceId
        except Throwable as e:
          if "Cannot find active remote runner" in str(e):
            raise Exception("Failed to find active remote runner for executing container script.")
          raise
    - name: Configure Digital.ai Deploy
      type: xlrelease.ScriptTask
      description: Creating required configuration in Digital.ai Deploy to send deployment
        notifications to Release.
      script: |-
        from java.lang import Throwable

        try:
          autoConfigResponse = deploymentServerApi.autoconfigureDeploymentServer("${statusWebhookEventSourceId}")
          releaseVariables['autoconfigMessage'] = autoConfigResponse.message
          releaseVariables['autoconfigUrl'] = autoConfigResponse.url
          releaseVariables['autoconfigDetails'] = autoConfigResponse.details
        except Throwable as e:
          if "Cannot find active remote runner" in str(e):
            raise Exception("Failed to find active remote runner for executing container script.")
          raise
    color: "#3d6c9e"
  - phase: Final
    tasks:
    - name: Configuration successful
      type: xlrelease.Task
      description: |-
        ${autoconfigMessage}

        [View configuration in Deploy](${autoconfigUrl})
    color: "#3d6c9e"
  kind: WORKFLOW
  tags:
  - Remote Deploy
  - deployment server
  - new
  categories:
  - Create Deployment Server
  variables:
  - type: xlrelease.StringVariable
    key: statusWebhookEventSourceId
    requiresValue: false
    showOnReleaseStart: false
  - type: xlrelease.ReferenceVariable
    key: server
    requiresValue: false
    showOnReleaseStart: false
    label: Deploy server
    referencedType: digitalai.DeployServer
  - type: xlrelease.StringVariable
    key: autoconfigMessage
    requiresValue: false
    showOnReleaseStart: false
    label: Response message
  - type: xlrelease.StringVariable
    key: autoconfigUrl
    requiresValue: false
    showOnReleaseStart: false
    label: Response URL
  - type: xlrelease.StringVariable
    key: autoconfigDetails
    requiresValue: false
    showOnReleaseStart: false
    label: Response details
  disableNotifications: true
  author: Digital.ai
  logo:
    type: xlrelease.TemplateLogo
    contentType: image/svg+xml
    file: !file "template-logo/373a354eafca3d00c62ca8c13e0b8b735599f50b/deploy.svg"
  defaultTargetFolder: Digital.ai - Official/Workflow Executions
